[project]
name = "pypolyline"
version = "0.5.7"
description = "Fast Google Polyline encoding and decoding using Rust FFI"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy >= 2.0.0",
]
authors = [{ name = "Stephan HÃ¼gel", email = "urschrei@gmail.com" }]
license = "BlueOak-1.0.0"
license-files = ["LICENSE.md"]
keywords = ["Geo", "Polyline"]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: GIS"
    ]
[project.urls]
Repository = "https://github.com/urschrei/pypolyline"
Tracker = "https://github.com/urschrei/pypolyline/issues"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]

[tool.scikit-build]
minimum-version = "build-system.requires"
wheel.packages = ["src/convertbng"]

[build-system]
requires = [
    "scikit-build-core>=0.10",
    "numpy >= 2.0.0",
    "cython >= 3.1.0",
]
build-backend = "scikit_build_core.build"

[tool.pytest.ini_options]
minversion = "8.4.1"
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["F", "E", "W", "N", "D4", "UP", "PL", "TRY", "PERF", "FURB", "RUF", "S", "DTZ"]
ignore = ["ANN001", "ANN003", "ANN202", "ANN201", "DOC201", "E501", "PLR0904", "PLR0913", "PLR0917", "SLF001", "FIX002", "D400", "D415"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
